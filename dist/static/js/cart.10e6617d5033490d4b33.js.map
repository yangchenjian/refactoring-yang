{"version":3,"sources":["webpack:///./src/modules/js/filter.js","webpack:///./src/modules/js/api.js","webpack:///./src/modules/js/cartService.js","webpack:///./src/pages/cart/cart.js","webpack:///./src/modules/js/fetch.js"],"names":["mFilter","formatPrice","price","String","parseInt","Number","replace","formatBuyer","buyername","url","hotlists","indexbanner","categorylist","subList","rank","goodList","goodsDetails","goodsDeal","cartList","addCart","cartReduce","cartRemove","cartMremove","addressLists","addressAdd","addressRemove","addressUpdate","addressSetDefault","item","hasOwnProperty","Cart","id","fetch","number","arr","idx","forEach","good","push","key","globalFilter","Vue","filter","qs","parse","location","search","substr","el","data","cartLists","total","editingShop","editingShopIdx","removePopUp","removeData","removePopMsg","methods","getCartData","_this","this","axios","get","then","res","datas","shop","checked","editing","editingMsg","removeChecked","catch","err","console","log","chooseGood","attr","every","selectShop","selectAll","editShop","shopIdx","shopItem","reduce","add","remove","shopIndex","goodIndex","removeList","removeLists","length","removeConfirm","_this2","_removeData","post","splice","removeShop","ids","findIndex","removeCancel","removeOverlay","start","e","startX","changedTouches","clientX","end","goodIdx","endX","left","Velocity","$refs","computed","allSelected","set","newValue","selectedLists","allRemoveSelected","watch","newVal","oldVal","document","body","style","overflow","height","created","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","a","resolve","reject","resp","status","error"],"mappings":"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","file":"static/js/cart.10e6617d5033490d4b33.js","sourcesContent":["\nlet mFilter = {\n\t\n\n\tformatPrice:price=>{\n\t\treturn String(parseInt(Number(price)*100)).replace(/(\\d{2})$/, '.$1')\n\n\t\t// if(price+'.0' != price){\n\t\t// \treturn price\n\t\t// }else{\n\t\t// \treturn price + '.00' \n\t\t// }\t\t\t\t\n\t\n\n\t}, //formatPrice\n\tformatBuyer:buyername=>{\n\t\treturn buyername.replace(/.(?=.)/g, '*');\n\t}\n\n\n\n}\n\n\nexport default mFilter\n\n\n// WEBPACK FOOTER //\n// ./src/modules/js/filter.js","// 测试环境与生产环境之间的切换 一个测试用的host 一个生产用的，产品在mock数据下都没问题的话，通过手动注释host 来完成环境的切换\n// let host = 'http://mock.eolinker.com/WRiiiWx935d408ca499edf80cafc0228ec55654762caa7c?uri='\n// let host = ''\nlet host = 'http://rap2api.taobao.org/app/mock/149241'\n// 存放所有请求的api 这儿声明的名字 与 export default module的name  应该一样\nlet url = {\n\thotlists: '/index/hotlists',\n\tindexbanner: '/index/banner',\n\tcategorylist: '/category/topList',\n\tsubList: '/category/subList',\n\trank: '/category/rank',\n\tgoodList: '/search/list', //商品列表\n\tgoodsDetails: '/goods/details/',\n\tgoodsDeal: '/goods/deal/',\n\tcartList: '/cart/list',\n\taddCart: '/cart/add', // 增加购物车中商品数量 每次增加1\n\tcartReduce: '/cart/reduce', // 减少购物车中商品数量 每次减少1\n\tcartRemove: '/cart/remove', //  删除一个\n\tcartMremove: '/cart/mremove', //购物车 多个删除\n\taddressLists: '/address/list',\n\taddressAdd: '/address/add',\n\taddressRemove: '/address/remove',\n\taddressUpdate: '/address/update',\n\taddressSetDefault: '/address/setDefault',\n\n \n}\n// 给每一个端口都加上host  自己将let item  写成了 item\nfor (let item in url) {\n\tif (url.hasOwnProperty(item)) {\n\t\turl[item] = host + url[item]\n\t}\t\n}\n\n\n// 1.02.28\nexport default url \n\n\n// WEBPACK FOOTER //\n// ./src/modules/js/api.js","// 对购物车的常用操作进行封装，有了这个就不用关心url接口，与异步请求的问题了的问题了\n\nimport fetch from 'js/fetch.js'\nimport url from 'js/api.js'\n\nclass Cart{\n\tstatic add(id){\n\t\treturn fetch(url.addCart,{\n\t\t\tid,\n\t\t\tnumber: 1\n\t\t})\n\t}//add\n\t\n\tstatic reduce(id){\n\t\treturn fetch(url.cartReduce,{\n\t\t\tid,\n\t\t\tnumber: 1\n\t\t})\n\t}//reduce\n\n\tstatic remove(arr){\n\t\tlet idx = []\n\t\tarr.forEach(good=>{\n\t  \tidx.push(good.id)\n\t\t})\n\n\t}\n\n} //Cart\n\nexport default Cart\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/js/cartService.js","import './css/cart.css'\nimport './css/cart_base.css'\nimport './css/cart_trade.css'\n\n\nimport Vue from 'vue'\nimport axios from 'axios'\nimport qs from 'qs'\nimport Velocity from 'velocity-animate';\nimport url from 'js/api.js'\n\n// 自己做的两个小封装\nimport fetch from 'js/fetch.js'\nimport Cart from 'js/cartService.js'\n\n\n\n\n// 引入过滤器文件\nimport globalFilter from 'js/filter.js'\nfor(let key in globalFilter){\n\tVue.filter(key,globalFilter[key])\n}\n\nlet {id} = qs.parse(location.search.substr(1))\n\n\nlet cart = new Vue({\n\tel: '#cart',\n\tdata:{\n\t\tcartLists : null,\n\t\t// 价格初始化就是个 0 ,在计算属性中进行计算\n\t\ttotal: 0,\n\t\teditingShop: null,\n\t\teditingShopIdx : -1,\n\t\tremovePopUp: false,\n\t\tremoveData: null,\n\t\tremovePopMsg: '',\n\t},//data\n\tmethods:{\n\t\tgetCartData(){\n\t\t\taxios.get(url.cartList)\n\t\t\t  .then(res=>{\n\t\t\t  \t// 0- ⚠️先赋值然后在添加的属性vue是不负责跟踪变化的 为了解决这个问题，需要对数据进行初始化的处理\n\t\t\t  \t//1-   先拿到原始数据，然后在赋值\n\t\t\t  \t//2- 「对原始数据进行操作」  给每一件商品都添加一个 checked 属性 \n\t\t\t  \t// 3- 给店铺的选择也像商品一样 处理一波\n\t\t\t  \tlet datas = res.data.data.cartList\n\t\t\t  \tdatas.forEach(shop=>{\n\t\t\t  \t\t// 开始时所有的商店都是被选中（true）的状态\n\t\t\t  \t\tshop.checked = true\n\t\t\t  \t\t// 给所有的店铺添加editing属性以及editingMsg的文字说明\n\t\t\t  \t\t// 开始时 都是不可以编辑的,同时显示的都是 「编辑」字样\n\t\t\t  \t\tshop.editing = false\n\t\t\t  \t\tshop.editingMsg = '编辑'\n\t\t\t  \t\t// 是否删除选中的商品 全给false 让用户自己选择看看删哪个\n\t\t\t  \t\tshop.removeChecked = false\n\t\t\t  \t\tshop.goodList.forEach(good=>{\n\t\t\t  \t\t\tgood.checked = true\n\t\t\t  \t\t\tgood.removeChecked = false\n\t\t\t  \t\t})\n\t\t\t  \t})\n\t\t\t  \t// 最后把处理过的数据送进data中的cartLists里面去\n\t\t\t  \tthis.cartLists = datas\n\t\t\t})\n\t\t\t  .catch(err=>{\n\t\t\t  \tconsole.log(err)\n\t\t\t  })\n\t\t},//getCartData\n\t\t// ⚠️ 写的时候 忘了写 good 这个参数\n\t\t// 要多一个shop的参数 把店铺的信息用参数放进方法里面\n\t\tchooseGood(shop,good){\n\t\t\tlet attr = this.editingShop?'removeChecked' :'checked'\n\t\t\tgood[attr] = !good[attr]\n\t\t\t// 利用现成的every方法\n\t\t\tshop[attr] = shop.goodList.every(\n\t\t\t\tgood=>{\n\t\t\t\t\treturn good[attr]  \n\t\t\t  }\n\t\t\t)\n\t\t},//chooseGood\n\t\tselectShop(shop){\n\t\t\tlet attr = this.editingShop?'removeChecked' :'checked'\n\t\t\t// 选项取反\n\t\t\tshop[attr] = !shop[attr]\n\t\t\t// 遍历每一件商品 如果 shop.checked 为false 那么该店铺下的每一件商品都是false\n\t\t\t// 如果 shop.checked为true 那么 每一件商品都是 true\n\t\t\t// 接着完善 全选 的功能\n\t\t\tshop.goodList.forEach(good=>{\n\t\t\t\tgood[attr] = shop[attr]\n\t\t\t})\n\t\t},//selectShop\n\t\tselectAll(){\n\t\t\t// 对计算属性allSelected做一个取反\n\t\t\t// ⚠️ 因为没有对 allSelected 的set值做处理 所以输出出来的 都是true\n\t\t\t// ⚠️ 必须要对 allSelected 的set值做处理 \n\t\t\t// 做完 全选 就要做 价格 的实时计算啦\n\t\t\tlet attr =  this.editingShop?'allRemoveSelected':'allSelected'\n\t\t\tthis[attr] = !this[attr]\n\t\t},//selectAll\n\t\t// 编辑店铺的方法\n\t\teditShop(shop,shopIdx){\n\t\t\t// 对商铺的编辑状态进行相互切换 默认是false\n\t\t\tshop.editing = !shop.editing\n\t\t\t// 做一个三目 以shop.editing的布尔值为中心在编辑状态的同时对文字进行动态变化\n\t\t\tshop.editingMsg = shop.editing?'完成':'编辑'\n\t\t\t// 依托商铺的下标对编辑状态进行判断，目的是对其他店铺进行「不可编辑」的处理 整个逻辑流程自己要清晰\n\t\t\tthis.cartLists.forEach((shopItem,idx)=>{\n\t\t\t\tif(shopIdx !== idx){\n\t\t\t\t\t// 其他店铺的状态都是 不可编辑状态\n\t\t\t\t\tshopItem.editing = false\n\t\t\t\t\tshopItem.editingMsg = shop.editing ? '' : '编辑'\n\t\t\t\t}\n\t\t\t})\n\t\t\t// 对全局的editingShop 与 editingShopIdx 进行赋值处理\n\t\t\tthis.editingShop = shop.editing ? shop : null\n\t\t\tthis.editingShopIdx = shop.editing ? shopIdx : -1\n\t\t}, //editShop\n\t\t// 减少商品 要进行异步数据请求 更新到数据库中\n\t\t// ⚠️ 先异步请求 更改数据库中的数据，数据库中的数据更改成功了，本地数据进行相应的变化就可以\n\t\treduce(good){\n\t\t\tif(good.number === 1) return \n\t\t\tCart.reduce(good.id).then(res=>{\n\t\t\t\tgood.number--\n\t\t\t})\n\n\t\t\t// axios.post(url.cartReduce,{\n\t\t\t// \tid: good.id,\n\t\t\t// \tnumber: 1\n\n\t\t\t// }).then(res=>{\n\t\t\t// \tgood.number--\n\t\t\t// })\n\t\t},//reduce\n\t\t\n\t\t//增加商品 要进行异步数据请求 也更新到数据库中\n\t\t// ⚠️ 先异步请求 更改数据库中的数据，数据库中的数据更改成功了，本地数据进行相应的变化就可以\n\t\tadd(good){\n\t\t\t// axios.post(url.addCart,{\n\t\t\t// \tid: good.id,\n\t\t\t// \tnumber: 1\n\t\t\t// }).then(res=>{\n\t\t\t// \tgood.number++\n\t\t\t// })\n\t\t\tCart.add(good.id).then(res=>{\n\t\t\t\tgood.number++\n\t\t\t})\n\n\t\t},//add\n\t\t// 删除商品 不仅要数据库的信息得到更新，同时也要有相应的弹窗让用户用来确认\n\t\tremove(shop,shopIndex,good,goodIndex){\n\t\t\t// console.log('该商品要被删除了')\n\t\t\t// 激活这个方法 那么弹窗就先出来吧\n\t\t\tthis.removePopUp = true\n\t\t\t// 因为removeConfirm 接收不到要删除的商品与店铺的信息，所以把信息先存到 removeData 里面去\n\t\t\tthis.removeData = {shop,shopIndex,good,goodIndex}\n\t\t\tthis.removePopMsg = '您确认删除该商品吗？'\n\n\t\t},//remove\n\t\t// ⚠️ 计算属性 removeLists 依托于 removeList\n\t\tremoveList(){\n\t\t\t// 激活弹窗\n\t\t\tthis.removePopUp = true\n\t\t\t// removeLists 在计算属性中实时计算长度\n\t\t\tthis.removePopMsg = `确定要将所选中的${this.removeLists.length}个商品删除吗？`\n\t\t},//removeList\n\t\t\n\n\t\t// 通过异步请求 把这个商品删掉~\n\t\tremoveConfirm(){ \n\t\t\t// 进入删除单个商品逻辑 依托弹窗信息判断 传单个商品id\n\t\t\tif(this.removePopMsg === '您确认删除该商品吗？'){\n\t\t\t\t\t// 因为在 remove 方法中已经把数据送进 removeData 里面去了 所以 这个方法就可以用了 先来个对象的解构赋值\n\t\t\t\tlet {shop,shopIndex,good,goodIndex} = this.removeData\n\t\t\t\t// 传个商品id 异步告诉数据库 把相应的商品信息删除掉\n\t\t\t\taxios.post(url.cartRemove,{\n\t\t\t\t\tid: good.id,\n\t\t\t\t\t// 数据库操作完成后\n\t\t\t\t}).then(res=>{\n\t\t\t\t\t// 依托 goodIndex商品下标 就要对本地的数据「前端显示这块儿」操作一波啦\n\t\t\t\t\tshop.goodList.splice(goodIndex,1)\n\t\t\t\t\t// 当店铺没有商品的时候，利用 shopIndex 让店铺也要消失掉 \n\t\t\t\t\tif(!shop.goodList.length){\n\t\t\t\t\t\tthis.cartLists.splice(shopIndex,1)\n\t\t\t\t\t\t// 将无效店铺删除掉之后，要将剩下的店铺切换到正常状态 专门写一个方法用来处理其他店铺的变化，\n\t\t\t\t\t\t// 搞定这个就要想想 批量删除具体怎么搞了\n\t\t\t\t\t\tthis.removeShop()\n\t\t\t\t\t}\n\t\t\t\t\t// 弹层收起来吧\n\t\t\t\t\tthis.removePopUp = false\n\t\t\t\t})\n\t\t\t}\n\t\t\t// 进入删除多个的逻辑 传一个数组 数组中都是商品id\n\t\t\t// 分两种情况 一种是将其中一个店铺的商品全部删除了，另一种情况是，只删除了该店铺的其中一部分商品\n\t\t\t// 前一种情况记得通过 shopIndex 把空店铺也删除一下\n\t\t\telse{\n\t\t\t\tlet ids = []\n\t\t\t\t// 通过遍历 拿到计算属性removeLists 中的商品,将商品id传进去\n\t\t\t\tthis.removeLists.forEach(good=>{\n\t\t\t\t\tids.push(good.id)\n\t\t\t\t})\n\t\t\t\taxios.post(url.cartMremove,{\n\t\t\t\t\tids\n\t\t\t\t})\n\t\t\t\t// 接着分两种情况进行处理\n\t\t\t\t.then(res=>{\n\t\t\t\t\tlet arr = []\n\t\t\t\t\t//遍历要编辑店铺的这个商品列表 => this.editingShop.goodList\n\t\t\t\t\t// 通过 removeLists 看看要删除的商品 在不在 this.editingShop.goodList 里面\n\t\t\t\t\t// 如果不在 送进幸存商品的数组中\n\t\t\t\t\t// 接着把新数组给到这个 this.editingShop.goodList 里面\n\t\t\t\t\t// 如果没有幸存商品 那就删除该店铺\n\t\t\t\t\tthis.editingShop.goodList.forEach(good=>{\n\t\t\t\t\t\tlet index = this.removeLists.findIndex(item=>{\n\t\t\t\t\t\t\t// 之前这儿少写了一个等于号\n\t\t\t\t\t\t\treturn item.id ===  good.id\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(index === -1){\n\t\t\t\t\t\t\tarr.push(good)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t// ⚠️ 如果群删了一波还有商品 那把剩的商品送进 goodList 里面去\n\t\t\t\t\t// 如果 店铺下面已经没有商品了，那还是老规矩 通过 removeShop 方法 依托 editingShopIdx 把店铺也删除掉\n\t\t\t\t\t// 顺道还原其他的店铺与商品\n\t\t\t\t\tif(arr.length){\n\t\t\t\t\t\tthis.editingShop.goodList = arr\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.removeShop(this.editingShopIdx)\n\t\t\t\t\t}\n\t\t\t\t\t// 关弹窗\n\t\t\t\t\tthis.removePopUp = false\n\t\t\t\t})\n\t\t\t}\n\t\t},//removeConfirm\n\t\tremoveCancel(){\n\t\t\tthis.removePopUp = false\n\n\t\t},//removeCancel\n\t\tremoveOverlay(){\n\t\t\tthis.removePopUp = false\n\t\t},\n\t\t// ⚠️ removeShop方法是给removeConfirm 这个方法中使用的补充方法 \n\t\t// 将无效店铺删除掉之后，要将剩下的店铺切换到正常状态 \n\t\t// 在做多个删除中 将这个方法进行了拓展 除了恢复其他店铺功能 通过cartLists依托shopIndex 也有了删除功能\n\t\tremoveShop(shopIndex){\n\t\t\tthis.cartLists.splice(shopIndex, 1)\n\t\t\t// 还原初始值让商品，店铺进入开始刚进页面时的正常状态 =>商品，店铺都要进行还原,不然其他店铺与商品都还是 「不正常的状态」\n\t\t\t// 先把根 data中的 editingShop 与 editingShopIdx 都恢复\n\t\t\tthis.editingShop = null\n\t\t\tthis.editingShopIdx = -1\n\t\t\t// ⚠️ 接着 重新遍历数据 重新赋予店铺正常的状态与文字\n\t\t\tthis.cartLists.forEach(shop=>{\n        shop.editing = false\n        shop.editingMsg = '编辑'\n\t\t\t})\n\n\t\t},// removeShop\n\t\t// 滑动删除的 start 与 end 方法\n\t\tstart(e,good){\n\t\t\t//通过原生api 记录开始的位置\n\t\t\tgood.startX = e.changedTouches[0].clientX\n\t\t}, //start\n\t\tend(e,shop,shopIdx,good,goodIdx){\n\t\t\t// 通过good本身添加的属性拿到开始的位置记录 记录结束的位置\n\t\t\tlet endX = e.changedTouches[0].clientX\n\t\t\tlet left = '0'\n\t\t\t// console.log(endX,good.startX)\n\t\t\t// 做一个距离上面的判断 开始减去结束 实际上是往左滑动 100的时候\n\t\t\tif(good.startX - endX>100){\n\t\t\t\tleft = '-60px'\n        shop.editingMsg = ''\n\t\t\t}\n\t\t\t// 做一个反向处理 往右面滑动的时候还原商品状态\n\t\t\tif(endX - good.startX>100){\n\t\t\t\tleft = '0px'\n        shop.editingMsg = '编辑'\n\t\t\t}\n\n\t\t\t// 用vue的方法 拿到dom节点 返回的是一个数组  $refs 不是响应式的\n\t\t\t// this.$refs[`goods-${shopIdx}-${goodIdx}`]\n\t\t\t// 使用Velocity动画第一个参数是节点，第二个参数是对象 用于动画的配置 \n\t\t\tVelocity(this.$refs[`goods-${shopIdx}-${goodIdx}`],{\n\t\t\t\t// 对象的简洁写法\n\t\t\t\tleft\n\t\t\t})\n\t\t},//end 到这儿就要想一下 fetch的封装与server层的封装\n\n\t},//methods\n\tcomputed:{\n\t\t// 全选 这个功能 用计算属性来做。 要用到 get set 所以用对象的形式写\n\t\tallSelected:{\n\t\t\tget(){\n\t\t\t\t// 先判断有没有数据 没数据就给个false\n\t\t\t\tif(this.cartLists&&this.cartLists.length){\n\t\t\t\t\t// 判断cartLists中的所有店铺有没有被选中 并且判断其中的所有店铺的checked的值是不是为true\n\t\t\t\t\treturn this.cartLists.every(shop=>{\n\t\t\t\t\t\treturn shop.checked\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t},\n\t\t\tset(newValue){\n\t\t\t\t// 遍历数据顶层的shop 把newValue的值赋值给 shop.checked\n\t\t\t\t// 同时遍历goodList 每一个商品的 good.checked 也都要弄上新值\n\t\t\t\tthis.cartLists.forEach(shop=>{\n\t\t\t\t\tshop.checked = newValue\n\t\t\t\t\tshop.goodList.forEach(good=>{\n\t\t\t\t\t\tgood.checked = newValue\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t},//allSelect\n\t\t// ⚠️ 选中商品的价格计算 不用set 只需要用get 所以直接用方法写就可以了\n\t\tselectedLists(){\n\t\t\t// 如果 cartLists 的长度为空的时候 咱就不算了,返回一个空数组\n\t\t\t// 如果 cartLists 存在并且长度不为空的时候 在继续计算\n\t\t\t// 因为接口数据的原因遍历两层\n\t\t\tif(this.cartLists&&this.cartLists.length){\n\t\t\t\t// 给个空数组很重要\n\t\t\t\tlet arr = []\n\t\t\t\tlet total = 0\n\t\t\t\tthis.cartLists.forEach(shop=>{\n\t\t\t\t\tshop.goodList.forEach(good=>{\n\t\t\t\t\t\t// 判断商品有没有被选中,选中的商品送进新的数组，并且计算选中商品的总价（单价*数量）\n\t\t\t\t\t\tif(good.checked){\n\t\t\t\t\t\t\tarr.push(good)\n\t\t\t\t\t\t  total += good.price*good.number\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// 数算出来了 就赋值吧\n\t\t\t\tthis.total = total\n\t\t\t\t// 把选中的商品列表弹出来\n\t\t\t\treturn arr\n\t\t\t}else{\n\t\t\t\treturn []\n\t\t\t}\t\n\t\t},//selectedList\n\t\tremoveLists(){\n\t\t\t// 如果店铺在编辑状态，并且该店铺店铺下的商品有被选择，那么就push到数组中去\n\t\t\t// 如果没有就给个空数组\n\t\t\tif(this.editingShop){\n\t\t\t\tlet arr = []\n\t\t\t\tthis.editingShop.goodList.forEach(good=>{\n\t\t\t\t\t// 如果商品已经被选中 把商品push到临时空数组里面去 否则给个空数组\n\t\t\t\t\tif(good.removeChecked){\n\t\t\t\t\t\tarr.push(good)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn arr\n\t\t\t}\n\t\t\treturn []\n\t\t},//removeLists\n\n\t\tallRemoveSelected:{\n\t\t\tget(){\n\t\t\t\tif (this.editingShop) {\n\t\t\t\t\treturn this.editingShop.removeChecked\n\t\t\t\t}else{\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tset(newValue){\n\t\t\t\tif (this.editingShop) {\n\t\t\t\t this.editingShop.removeChecked = newValue\n\t\t\t\t this.editingShop.goodList.forEach(good=>{\n\t\t\t\t \tgood.removeChecked = newValue\n\t\t\t\t })\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t},//computed\n\twatch:{\n\t\tremovePopUp(newVal,oldVal){\n\t\t\tdocument.body.style.overflow = newVal ? 'hidden': 'auto'\n      document.body.style.height = newVal?'100%': 'auto'  \n\t\t}\n\t},//watch\n\tcreated(){\n\t\tthis.getCartData()\n\t}// created\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cart/cart.js","// 做这个文件的目的  把 axios 与 api.js 结合一下 方便使用，这样用axios请求的时候就方便了\n// 所有接口通过自己写的方法走出去\nimport axios from 'axios'\n\nfunction fetch(url,data) {\n\treturn new Promise((resolve,reject)=>{\n\t\t// 优化一波 请求方式\n\t\tlet promise = !!data ? axios.post(url,data) : axios.get(url)\n\t\t// axios.post(url,data).then(resp=>{\n\t\t\t promise.then(resp=>{\n\t\t\t// 拿到回文的状态码 \n\t\t\t// ⚠️ 当时没有仔细观察数据格式 人家的data是2层 开始时就写了一层\n\t\t\tlet status = resp.data.data.status\n\t\t\tif(status===200){\n\t\t\t\tresolve(resp)\n\t\t\t}\n\t\t\tif(status===300){\n\t\t\t\tconsole.log('现在状态是300，看看那儿不对')\n\t\t\t\tresolve(resp)\n\t\t\t}\n\t\t\treject(resp)\n\t\t}).catch(error=>{\n\t\t\treject(error)\n\t\t})\n\t})\n}\n// 把做的方法放出去\nexport default fetch\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/js/fetch.js"],"sourceRoot":""}